library("dplyr")
library("ggplot2")
setwd("~/Documents/GitHub/prior_inference/RSA_2019_08/X4_Plots")
full <- read.csv("for_scatterplots_updated.csv")
head(full)
stats <- full %>%
group_by(softness,obedience, alpha, cross_validated,type, Nr) %>%
summarise(n_occur = n())
ordered <- stats[order(stats$Nr),] # Sort the summary table
print.data.frame(ordered)
plotData <- subset(full, softness == "globally_opt" & obedience == 0 &
cross_validated == "no" & type == "fullRSA" & alpha == 1)
r2 <- round((summary(lm(plotData$model~plotData$workerData))$r.squared), digits = 4)
softness <- unique(as.character(plotData$softness))
obedience <- unique(as.character(plotData$obedience))
type <- unique(as.character(plotData$type))
nr <- plotData$Nr[1]
summary(lm(plotData$model~plotData$workerData))
model <- lm(formula = plotData$model~plotData$workerData)
model
summary(model)
plotData <- subset(full, softness == "globally_opt" & obedience == 0 &
cross_validated == "no" & type == "simpleRSA")
model <- lm(formula = plotData$model~plotData$workerData)
summary(model)
confint(model)
r2 <- round((summary(lm(plotData$model~plotData$workerData))$r.squared), digits = 4)
softness <- unique(as.character(plotData$softness))
obedience <- unique(as.character(plotData$obedience))
type <- unique(as.character(plotData$type))
nr <- plotData$Nr[1]
summary(lm(plotData$model~plotData$workerData))
print.data.frame(ordered)
plotData <- subset(full, softness == "globally_opt" & obedience == 0 &
cross_validated == "no" & type == "fullRSA" & alpha == "globally_opt")
r2 <- round((summary(lm(plotData$model~plotData$workerData))$r.squared), digits = 4)
softness <- unique(as.character(plotData$softness))
obedience <- unique(as.character(plotData$obedience))
type <- unique(as.character(plotData$type))
nr <- plotData$Nr[1]
summary(lm(plotData$model~plotData$workerData))
